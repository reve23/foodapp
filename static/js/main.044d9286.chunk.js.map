{"version":3,"sources":["Recipy.js","Nav.js","App.js","reportWebVitals.js","index.js","recipy.module.css"],"names":["Recipy","title","calories","img","ingredients","className","styles","recipe","image","src","alt","map","ingredient","text","Nav","class","href","type","id","App","useState","recipies","setRecipies","search","setSearch","query","setQuery","useEffect","getRecipy","a","fetch","resp","json","data","console","log","hits","onSubmit","e","preventDefault","value","onChange","target","recipy","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2QAkBeA,MAff,YAAmD,IAAlCC,EAAiC,EAAjCA,MAAMC,EAA2B,EAA3BA,SAASC,EAAkB,EAAlBA,IAAIC,EAAc,EAAdA,YAChC,OACI,sBAAMC,UAAWC,IAAOC,OAAxB,UACI,qBAAKF,UAAWC,IAAOE,MAAOC,IAAKN,EAAKO,IAAI,KAC5C,oBAAIL,UAAWC,IAAOL,MAAtB,SAA8BA,IAC9B,4BAAIC,IACJ,6BACKE,EAAYO,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,gBCSrBC,MAlBf,WACI,OACI,8BACI,qBAAKC,MAAM,8CAAX,SACJ,sBAAKA,MAAM,kBAAX,UACI,mBAAGA,MAAM,eAAeC,KAAK,IAA7B,qBACA,wBAAQD,MAAM,iBAAiBE,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAxL,SACA,sBAAMF,MAAM,0BAEZ,qBAAKA,MAAM,2BAA2BG,GAAG,mCC6CtCC,MAnDf,WACE,IAEA,EAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAyBJ,mBAAS,WAAlC,mBAAOK,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACRC,MACA,CAACH,IAEH,IAAMG,EAAS,uCAAG,8BAAAC,EAAA,sEACGC,MAAM,iCAAD,OAAmCL,EAAnC,mBAXX,WAWW,oBAVV,qCASE,cACVM,EADU,gBAEGA,EAAKC,OAFR,OAEVC,EAFU,OAGhBC,QAAQC,IAAIF,EAAKG,MACjBd,EAAYW,EAAKG,MAJD,2CAAH,qDAgBf,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,uBAAMgC,SATQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAMmBnB,UAAU,cAArC,UACE,uBAAOY,KAAK,OAAOZ,UAAU,aAAamC,MAAOjB,EAAQkB,SAb1C,SAACH,GACpBd,EAAUc,EAAEI,OAAOF,UAaf,wBAAQvB,KAAK,SAASZ,UAAU,aAAhC,uBAEF,qBAAKA,UAAU,OAAf,SAEEgB,EAASV,KAAI,SAAAgC,GAAM,OACjB,cAAC,EAAD,CAEA1C,MAAO0C,EAAOpC,OAAOqC,MACrB1C,SAAUyC,EAAOpC,OAAOL,SACxBC,IAAKwC,EAAOpC,OAAOC,MACnBJ,YAAauC,EAAOpC,OAAOH,aAJtBuC,EAAOpC,OAAOqC,gBC/BdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.044d9286.chunk.js","sourcesContent":["import React from 'react'\r\nimport styles from './recipy.module.css'\r\n\r\nfunction Recipy({title,calories,img,ingredients}) {\r\n    return (\r\n        <div  className={styles.recipe}>\r\n            <img className={styles.image} src={img} alt=\"\" />\r\n            <h1 className={styles.title}>{title}</h1>\r\n            <p>{calories}</p>\r\n            <ol>\r\n                {ingredients.map(ingredient =>(\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipy\r\n","import React from 'react'\r\n\r\nfunction Nav() {\r\n    return (\r\n        <div>\r\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">FoodApp</a>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        \r\n            </div>\r\n        </div>\r\n        </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import './App.css';\nimport {useEffect,useState} from 'react'\nimport Recipy from './Recipy';\nimport Nav from './Nav';\n\nfunction App() {\n  const APP_ID = 'c9e63577'\n  const API_KEY = '30fd4f6d7bb35ac234829618d1f35c26'\n  const [recipies,setRecipies] = useState([])\n  const [search,setSearch] = useState('')\n  const [query,setQuery] = useState('chicken')\n\n  useEffect(() => {\n    getRecipy()\n  },[query])\n\n  const getRecipy = async () => {\n    const resp = await fetch( `https:api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${API_KEY}`)\n    const data = await resp.json()\n    console.log(data.hits)\n    setRecipies(data.hits)\n  }\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value)\n  }\n  const getSearch = e =>{\n    e.preventDefault()\n    setQuery(search)\n    setSearch('')\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input type=\"text\" className=\"search-bar\" value={search} onChange={updateSearch}/>\n        <button type=\"submit\" className=\"search-btn\">Submit</button>\n      </form>\n      <div className=\"wrap\">\n      {\n        recipies.map(recipy =>(\n          <Recipy\n          key={recipy.recipe.label}\n          title={recipy.recipe.label}\n          calories={recipy.recipe.calories}\n          img={recipy.recipe.image}\n          ingredients={recipy.recipe.ingredients}\n          />\n        ))\n      }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipy_recipe__2iKOq\",\"title\":\"recipy_title__2uE4G\",\"image\":\"recipy_image__1Bo0o\"};"],"sourceRoot":""}